==============
``mongofiles``
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. |tool-binary| replace:: mongofiles

.. only:: (not man)

   .. binary:: mongofiles

Synopsis
--------

The :binary:`~bin.mongofiles` utility makes it possible to manipulate files
stored in your MongoDB instance in :term:`GridFS` objects from the
command line. It is particularly useful as it provides an interface
between objects stored in your file system and GridFS.

All :binary:`~bin.mongofiles` commands have the following form:

.. code-block:: sh

   mongofiles <options> <commands> <filename>

The components of the :binary:`~bin.mongofiles` command are:

1. :ref:`Options <mongofiles-options>`. You may use one or more of
   these options to control the behavior of :binary:`~bin.mongofiles`.

2. :ref:`Commands <mongofiles-commands>`. Use one of these commands to
   determine the action of :binary:`~bin.mongofiles`.

3. A filename which is either: the name of a file on your local's file
   system, or a GridFS object.

:binary:`~bin.mongofiles`, like :binary:`~bin.mongodump`, :binary:`~bin.mongoexport`,
:binary:`~bin.mongoimport`, and :binary:`~bin.mongorestore`, can access data
stored in a MongoDB data directory without requiring a running
:binary:`~bin.mongod` instance, if no other :binary:`~bin.mongod` is running.

.. important:: For :term:`replica sets <replica set>`,
   :binary:`~bin.mongofiles` can only read from the set's
   ':term:`primary`.

.. _mongofiles-options:

Options
-------

.. program:: mongofiles

.. option:: --help

   Returns information on the options and use of :program:`mongofiles`.


.. option:: --verbose, -v

   Increases the amount of internal reporting returned on standard output
   or in log files. Increase the verbosity with the ``-v`` form by
   including the option multiple times, (e.g. ``-vvvvv``.)
   


.. option:: --quiet

   Runs the :program:`mongofiles` in a quiet mode that attempts to limit the amount
   of output.

   This option suppresses:
   
   - output from :term:`database commands <database command>`
   
   - replication activity
   
   - connection accepted events
   
   - connection closed events
   


.. option:: --version

   Returns the :program:`mongofiles` release number.


.. option:: --host <hostname><:port>

   Specifies a resolvable hostname for the :binary:`~bin.mongod` that holds
   your GridFS system. By default :binary:`~bin.mongofiles` attempts to connect
   to a MongoDB process running on the localhost port number ``27017``.
   
   Optionally, specify a port number to connect a MongoDB instance running
   on a port other than 27017.
   


.. option:: --port <port>

   *Default*: 27017

   Specifies the TCP port on which the MongoDB instance listens for
   client connections.
   


.. option:: --ipv6

   Enables IPv6 support and allows the :program:`mongofiles` to connect to the
   MongoDB instance using an IPv6 network. All MongoDB programs and
   processes disable IPv6 support by default.


.. option:: --ssl

   .. versionadded:: 2.6
   
   Enables connection to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
   TLS/SSL support enabled.
   
   The default distribution of MongoDB does not contain support for TLS/SSL.
   For more information on MongoDB and TLS/SSL, see :doc:`/tutorial/configure-ssl`.
   


.. option:: --sslCAFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains the root certificate chain
   from the Certificate Authority. Specify the file name of the
   :file:`.pem` file using relative or absolute paths.
   
   The default distribution of MongoDB does not contain support for
   TLS/SSL. For more information on MongoDB and TLS/SSL, see
   :doc:`/tutorial/configure-ssl`.
   
   .. include:: /includes/warning-always-use-sslCAFile-for-mongo.rst
   


.. option:: --sslPEMKeyFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains both the TLS/SSL certificate
   and key. Specify the file name of the :file:`.pem` file using relative
   or absolute paths.
   
   This option is required when using the :option:`--ssl` option to connect
   to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
   :setting:`~net.ssl.CAFile` enabled *without*
   :setting:`~net.ssl.weakCertificateValidation`.
   
   The default distribution of MongoDB does not contain support for TLS/SSL.
   For more information on MongoDB and TLS/SSL, see :doc:`/tutorial/configure-ssl`.
   


.. option:: --sslPEMKeyPassword <value>

   .. versionadded:: 2.6
   
   Specifies the password to de-crypt the certificate-key file (i.e.
   :option:`--sslPEMKeyFile`). Use the :option:`--sslPEMKeyPassword` option only if the
   certificate-key file is encrypted. In all cases, the :program:`mongofiles` will
   redact the password from all logging and reporting output.
   
   If the private key in the PEM file is encrypted and you do not specify
   the :option:`--sslPEMKeyPassword` option, the :program:`mongofiles` will prompt for a passphrase. See
   :ref:`ssl-certificate-password`.
   
   The default distribution of MongoDB does not contain support for TLS/SSL.
   For more information on MongoDB and TLS/SSL, see :doc:`/tutorial/configure-ssl`.


.. option:: --sslCRLFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains the Certificate Revocation
   List. Specify the file name of the :file:`.pem` file using relative or
   absolute paths.
   
   The default distribution of MongoDB does not contain support for TLS/SSL.
   For more information on MongoDB and TLS/SSL, see :doc:`/tutorial/configure-ssl`.
   


.. option:: --sslAllowInvalidCertificates

   .. versionadded:: 2.6
   
   Bypasses the validation checks for server certificates and allows
   the use of invalid certificates. When using the
   :setting:`~net.ssl.allowInvalidCertificates` setting, MongoDB logs as a
   warning the use of the invalid certificate.
   
   The default distribution of MongoDB does not contain support for TLS/SSL.
   For more information on MongoDB and TLS/SSL, see :doc:`/tutorial/configure-ssl`.
   


.. option:: --sslFIPSMode

   .. versionadded:: 2.6
   
   Directs the :program:`mongofiles` to use the FIPS mode of the installed OpenSSL
   library. Your system must have a FIPS compliant OpenSSL library to use
   the :option:`--sslFIPSMode` option.
   
   The default distribution of MongoDB does not contain support for TLS/SSL.
   For more information on MongoDB and TLS/SSL, see :doc:`/tutorial/configure-ssl`.


.. option:: --username <username>, -u <username>

   Specifies a username with which to authenticate to a MongoDB database
   that uses authentication. Use in conjunction with the ``--password`` and
   ``--authenticationDatabase`` options.
   


.. option:: --password <password>, -p <password>

   Specifies a password with which to authenticate to a MongoDB database
   that uses authentication. Use in conjunction with the ``--username`` and
   ``--authenticationDatabase`` options.
   
   If you do not specify an argument for :option:`--password`, :program:`mongofiles` will
   prompt interactively for a password on the console.


.. option:: --authenticationDatabase <dbname>

   .. versionadded:: 2.4
   
   Specifies the database that holds the user's credentials.   
   


.. option:: --authenticationMechanism <name>

   *Default*: MONGODB-CR

   .. versionadded:: 2.4
   
   .. versionchanged:: 2.6
      Added support for the ``PLAIN`` and ``MONGODB-X509`` authentication
      mechanisms.
   
   Specifies the authentication mechanism the :program:`mongofiles` instance uses to
   authenticate to the :binary:`~bin.mongod` or :binary:`~bin.mongos`.
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - MONGODB-CR
   
        - MongoDB challenge/response authentication.
   
      * - MONGODB-X509
   
        - MongoDB TLS/SSL certificate authentication.
   
      * - PLAIN
   
        - External authentication using LDAP. You can also use ``PLAIN``
          for authenticating in-database users. ``PLAIN`` transmits
          passwords in plain text. This mechanism is available only in
          `MongoDB Enterprise
          <http://www.mongodb.com/products/mongodb-enterprise>`_.
   
      * - GSSAPI
   
        - External authentication using Kerberos. This mechanism is
          available only in `MongoDB Enterprise
          <http://www.mongodb.com/products/mongodb-enterprise>`_.


.. option:: --gssapiServiceName

   .. versionadded:: 2.6
   
   Specify the name of the service using :doc:`GSSAPI/Kerberos
   </core/kerberos>`. Only required if the service does not use the
   default name of ``mongodb``.
   
   This option is available only in MongoDB Enterprise.
   


.. option:: --gssapiHostName

   .. versionadded:: 2.6
   
   Specify the hostname of a service using :doc:`GSSAPI/Kerberos
   </core/kerberos>`. *Only* required if the hostname of a machine does
   not match the hostname resolved by DNS.
   
   This option is available only in MongoDB Enterprise.
   


.. option:: --dbpath <path>

   Specifies the directory of the MongoDB data files. The :option:`--dbpath` option
   lets the :program:`mongofiles` attach directly to the local data files without
   going through a running :binary:`~bin.mongod`. When run with :option:`--dbpath`, the
   :program:`mongofiles` locks access to the data files. No :binary:`~bin.mongod` can
   access the files while the :program:`mongofiles` process runs.


.. option:: --directoryperdb

   When used in conjunction with the corresponding option in
   :binary:`~bin.mongod`, allows the :program:`mongofiles` to access data from MongoDB
   instances that use an on-disk format where every database has a distinct
   directory. This option is only relevant when specifying the
   :option:`--dbpath` option.


.. option:: --journal

   Enables the durability :term:`journal` to ensure data files remain valid
   and recoverable. This option applies only when you specify the
   . The :program:`mongofiles` enables journaling by default
   on 64-bit builds of versions after 2.0.


.. option:: --db <database>, -d <database>

   Specifies the name of the database on which to run the :program:`mongofiles`.


.. option:: --collection <collection>, -c <collection>

   This option has no use in this context and a future release may
   remove it. See :issue:`SERVER-4931` for more information.
   


.. option:: --local <filename>, -l <filename>

   Specifies the local filesystem name of a file for get and put
   operations.
   
   In the :command:`mongofiles put` and :command:`mongofiles get` commands,
   the required ``<filename>`` modifier refers to the name the object will
   have in GridFS. :binary:`~bin.mongofiles` assumes that this reflects the
   file's name on the local file system. This setting overrides this
   default.
   


.. option:: --type <MIME>

   Provides the ability to specify a :term:`MIME` type to describe the file
   inserted into GridFS storage. :binary:`~bin.mongofiles` omits this option in
   the default operation.
   
   Use only with :command:`mongofiles put` operations.
   


.. option:: --replace, -r

   Alters the behavior of :command:`mongofiles put` to replace existing
   GridFS objects with the specified local file, rather than adding an
   additional object with the same name.
   
   In the default operation, files will not be overwritten by a
   :command:`mongofiles put` option.
   


.. _mongofiles-commands:

Commands
--------

.. describe:: list <prefix>

   Lists the files in the GridFS store. The characters specified after
   ``list`` (e.g. ``<prefix>``) optionally limit the list of
   returned items to files that begin with that string of characters.

.. describe:: search <string>

   Lists the files in the GridFS store with names that match any
   portion of ``<string>``.

.. describe:: put <filename>

   Copy the specified file from the local file system into GridFS
   storage.

   Here, ``<filename>`` refers to the name the object will have in
   GridFS, and :binary:`~bin.mongofiles` assumes that this reflects the name the
   file has on the local file system. If the local filename is
   different use the :option:`mongofiles --local` option.

.. describe:: get <filename>

   Copy the specified file from GridFS storage to the local file
   system.

   Here, ``<filename>`` refers to the name the object will have in
   GridFS, and :binary:`~bin.mongofiles` assumes that this reflects the name the
   file has on the local file system. If the local filename is
   different use the :option:`mongofiles --local` option.

.. describe:: delete <filename>

   Delete the specified file from GridFS storage.

Examples
--------

To return a list of all files in a :term:`GridFS` collection in the
``records`` database, use the following invocation at the system shell:

.. code-block:: sh

   mongofiles -d records list

This :binary:`~bin.mongofiles` instance will connect to the
:binary:`~bin.mongod` instance running on the ``27017`` localhost
interface to specify the same operation on a different port or
hostname, and issue a command that resembles one of the following:

.. code-block:: sh

   mongofiles --port 37017 -d records list
   mongofiles --hostname db1.example.net -d records list
   mongofiles --hostname db1.example.net --port 37017 -d records list

Modify any of the following commands as needed if you're connecting
the :binary:`~bin.mongod` instances on different ports or hosts.

To upload a file named ``32-corinth.lp`` to the GridFS collection in
the ``records`` database, you can use the following command:

.. code-block:: sh

   mongofiles -d records put 32-corinth.lp

To delete the ``32-corinth.lp`` file from this GridFS collection in
the ``records`` database, you can use the following command:

.. code-block:: sh

   mongofiles -d records delete 32-corinth.lp

To search for files in the GridFS collection in the ``records``
database that have the string ``corinth`` in their names, you can use
following command:

.. code-block:: sh

   mongofiles -d records search corinth

To list all files in the GridFS collection in the ``records`` database
that begin with the string ``32``, you can use the following command:

.. code-block:: sh

   mongofiles -d records list 32

To fetch the file from the GridFS collection in the ``records``
database named ``32-corinth.lp``, you can use the following command:

.. code-block:: sh

   mongofiles -d records get 32-corinth.lp
