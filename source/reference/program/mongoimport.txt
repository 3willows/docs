.. _mongoimport:

===============
``mongoimport``
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol
.. |tool-binary| replace:: mongoimport

.. include:: /includes/admonition-mac-osx-sierra-restriction.rst

Synopsis
--------

The :binary:`~bin.mongoimport` tool imports content from an
:doc:`Extended JSON </reference/mongodb-extended-json>`, CSV, or TSV export
created by :binary:`~bin.mongoexport`, or potentially, another third-party export
tool.

See the :doc:`mongoexport` document for more information regarding
:binary:`~bin.mongoexport`, which provides the inverse "exporting"
capability.

Considerations
--------------

.. include:: /includes/fact-type-fidelity-loss.rst

.. include:: /includes/fact-type-fidelity-loss-example.rst

:binary:`~bin.mongoimport` supports data files that are UTF-8 encoded.
Using other encodings will produce errors.

Required Access
---------------

In order to connect to a :binary:`~bin.mongod` that enforces authorization
with the :option:`--auth <mongod --auth>` option, you must use the
:option:`--username <mongoexport --username>` and :option:`--password
<mongoexport --password>` options. The connecting user must
possess, at a minimum, the :authrole:`readWrite` role on the database
into which they are importing data.

Options
-------

.. include:: /includes/extracts/fact-3.0-tools-drop-dbpath-support-mongoimport.rst

.. binary:: mongoimport

.. program:: mongoimport

.. option:: --help

   Returns information on the options and use of :program:`mongoimport`.


.. option:: --verbose, -v

   Increases the amount of internal reporting returned on standard output
   or in log files. Increase the verbosity with the ``-v`` form by
   including the option multiple times, (e.g. ``-vvvvv``.)
   


.. option:: --quiet

   Runs the :program:`mongoimport` in a quiet mode that attempts to limit the amount
   of output.

   This option suppresses:
   
   - output from :term:`database commands <database command>`
   
   - replication activity
   
   - connection accepted events
   
   - connection closed events


.. option:: --version

   Returns the :program:`mongoimport` release number.


.. option:: --host <hostname><:port>, -h <hostname><:port>

   *Default*: localhost:27017

   Specifies a resolvable hostname for the :binary:`~bin.mongod` to which to
   connect. By default, the :program:`mongoimport` attempts to connect to a MongoDB
   instance running on the localhost on port number ``27017``.
   
   To connect to a replica set, specify the
   :setting:`~replication.replSetName` and a seed list of set members, as in
   the following:
   
   .. code-block:: none
   
      <replSetName>/<hostname1><:port>,<hostname2><:port>,<...>
   
   You can always connect directly to a single MongoDB instance by
   specifying the host and port number directly.
   
   .. versionchanged:: 3.0.0
      If you use IPv6 and use the ``<address>:<port>`` format, you must
      enclose the portion of an address and port combination in
      brackets (e.g. ``[<address>]``).


.. option:: --port <port>

   *Default*: 27017

   Specifies the TCP port on which the MongoDB instance listens for
   client connections.


.. option:: --ipv6

   *Removed in version 3.0.*
   
   Enables IPv6 support and allows :program:`mongoimport` to connect to the
   MongoDB instance using an IPv6 network. Prior to MongoDB 3.0, you 
   had to specify :option:`--ipv6` to use IPv6. In MongoDB 3.0 and later, IPv6
   is always enabled.


.. option:: --ssl

   .. versionadded:: 2.6
   
   Enables connection to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
   TLS/SSL support enabled.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslCAFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains the root certificate chain
   from the Certificate Authority. Specify the file name of the
   :file:`.pem` file using relative or absolute paths.
   
   .. warning::
   
      For TLS/SSL connections (``--ssl``) to :binary:`~bin.mongod` and
      :binary:`~bin.mongos`, if the :program:`mongoimport` runs without the
      :option:`--sslCAFile`, :program:`mongoimport` will not attempt
      to validate the server certificates. This creates a vulnerability
      to expired :binary:`~bin.mongod` and :binary:`~bin.mongos` certificates as
      well as to foreign processes posing as valid :binary:`~bin.mongod` or
      :binary:`~bin.mongos` instances. Ensure that you *always* specify the
      CA file to validate the server certificates in cases where
      intrusion is a possibility.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslPEMKeyFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains both the TLS/SSL certificate
   and key. Specify the file name of the :file:`.pem` file using relative
   or absolute paths.
   
   This option is required when using the :option:`--ssl` option to connect
   to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
   :setting:`~net.ssl.CAFile` enabled *without*
   :setting:`~net.ssl.allowConnectionsWithoutCertificates`.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslPEMKeyPassword <value>

   .. versionadded:: 2.6
   
   Specifies the password to de-crypt the certificate-key file (i.e.
   :option:`--sslPEMKeyFile`). Use the :option:`--sslPEMKeyPassword` option only if the
   certificate-key file is encrypted. In all cases, the :program:`mongoimport` will
   redact the password from all logging and reporting output.
   
   If the private key in the PEM file is encrypted and you do not specify
   the :option:`--sslPEMKeyPassword` option, the :program:`mongoimport` will prompt for a passphrase. See
   :ref:`ssl-certificate-password`.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslCRLFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains the Certificate Revocation
   List. Specify the file name of the :file:`.pem` file using relative or
   absolute paths.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslAllowInvalidCertificates

   .. versionadded:: 2.6
   
   Bypasses the validation checks for server certificates and allows
   the use of invalid certificates. When using the
   :setting:`~net.ssl.allowInvalidCertificates` setting, MongoDB logs as a
   warning the use of the invalid certificate.
   
   .. include:: /includes/extracts/ssl-facts-x509-invalid-certificate.rst
   
   .. include:: /includes/extracts/ssl-facts-invalid-cert-warning-clients.rst
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslAllowInvalidHostnames

   .. versionadded:: 3.0
   
   Disables the validation of the hostnames in TLS/SSL certificates. Allows
   :program:`mongoimport` to connect to MongoDB instances even if the hostname in their
   certificates do not match the specified hostname.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslFIPSMode

   .. versionadded:: 2.6
   
   Directs the :program:`mongoimport` to use the FIPS mode of the installed OpenSSL
   library. Your system must have a FIPS compliant OpenSSL library to use
   the :option:`--sslFIPSMode` option.
   
   .. include:: /includes/note-fips-is-enterprise-only.rst


.. option:: --username <username>, -u <username>

   Specifies a username with which to authenticate to a MongoDB database
   that uses authentication. Use in conjunction with the ``--password`` and
   ``--authenticationDatabase`` options.
   


.. option:: --password <password>, -p <password>

   Specifies a password with which to authenticate to a MongoDB database
   that uses authentication. Use in conjunction with the ``--username`` and
   ``--authenticationDatabase`` options.
   
   .. versionchanged:: 3.0.0
   
      If you do not specify an argument for :option:`--password`, :program:`mongoimport` returns
      an error.
   
   .. versionchanged:: 3.0.2
   
      If you wish :program:`mongoimport` to prompt the user
      for the password, pass the :option:`--username` option without
      :option:`--password` or specify an empty string as the :option:`--password` value,
      as in ``--password ""`` .


.. option:: --authenticationDatabase <dbname>

   Specifies the database in which the user is created.
   See :ref:`user-authentication-database`.
   


.. option:: --authenticationMechanism <name>

   *Default*: SCRAM-SHA-1

   .. versionchanged:: 2.6
      Added support for the ``PLAIN`` and ``MONGODB-X509`` authentication
      mechanisms.
   
   .. versionchanged:: 3.0
      Added support for the ``SCRAM-SHA-1`` authentication mechanism. Changed
      default mechanism to ``SCRAM-SHA-1``.
   

   Specifies the authentication mechanism the :program:`mongoimport` instance uses to
   authenticate to the :binary:`~bin.mongod` or :binary:`~bin.mongos`.
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - :ref:`SCRAM-SHA-1 <authentication-scram-sha-1>`
   
        - `RFC 5802 <https://tools.ietf.org/html/rfc5802>`_ standard
          Salted Challenge Response Authentication Mechanism using the SHA1
          hash function.
   
      * - :ref:`MONGODB-CR <authentication-mongodb-cr>`
   
        - MongoDB challenge/response authentication.
   
      * - :ref:`MONGODB-X509 <security-auth-x509>`
   
        - MongoDB TLS/SSL certificate authentication.
   
      * - :ref:`GSSAPI <security-auth-kerberos>` (Kerberos)
   
        - External authentication using Kerberos. This mechanism is
          available only in `MongoDB Enterprise
          <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_.
   
      * - :ref:`PLAIN <security-auth-ldap>` (LDAP SASL)
   
        - External authentication using LDAP. You can also use ``PLAIN``
          for authenticating in-database users. ``PLAIN`` transmits
          passwords in plain text. This mechanism is available only in
          `MongoDB Enterprise
          <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_.


.. option:: --gssapiServiceName

   .. versionadded:: 2.6
   
   Specify the name of the service using :doc:`GSSAPI/Kerberos
   </core/kerberos>`. Only required if the service does not use the
   default name of ``mongodb``.
   
   This option is available only in MongoDB Enterprise.
   


.. option:: --gssapiHostName

   .. versionadded:: 2.6
   
   Specify the hostname of a service using :doc:`GSSAPI/Kerberos
   </core/kerberos>`. *Only* required if the hostname of a machine does
   not match the hostname resolved by DNS.
   
   This option is available only in MongoDB Enterprise.
   


.. option:: --db <database>, -d <database>

   Specifies the name of the database on which to run the :program:`mongoimport`.


.. option:: --collection <collection>, -c <collection>

   Specifies the collection to import.
   
   .. versionadded:: 2.6
      If you do not specify :option:`--collection`,
      :binary:`~bin.mongoimport` takes the collection name from the input
      filename. MongoDB omits the extension of the file from the
      collection name, if the input file has an extension.


.. option:: --fields <field1[,field2]>, -f <field1[,field2]>

   Specify a comma separated list of field names when importing :term:`csv`
   or :term:`tsv` files that do not have field names in the first (i.e.
   header) line of the file.
   

   If you attempt to include :option:`--fields` when importing JSON data,
   :program:`mongoimport` will return an error. :option:`--fields` is only for :term:`csv`
   or :term:`tsv` imports.


.. option:: --fieldFile <filename>

   As an alternative to :option:`--fields`, the :option:`--fieldFile`
   option allows you to specify a file that holds a list of field names if
   your :term:`csv` or :term:`tsv` file does not include field names in the
   first line of the file (i.e. header). Place one field per line.

   If you attempt to include :option:`--fieldFile` when importing JSON data,
   :program:`mongoimport` will return an error. :option:`--fieldFile` is only for :term:`csv`
   or :term:`tsv` imports.


.. option:: --ignoreBlanks

   Ignores empty fields in :term:`csv` and :term:`tsv` exports. If not
   specified, :binary:`~bin.mongoimport` creates fields without values in
   imported documents.
   

   If you attempt to include :option:`--ignoreBlanks` when importing JSON data,
   :program:`mongoimport` will return an error. :option:`--ignoreBlanks` is only for :term:`csv`
   or :term:`tsv` imports.


.. option:: --type <json|csv|tsv>

   Specifies the file type to import. The default format is :term:`JSON`,
   but it's possible to import :term:`csv` and :term:`tsv` files.
   
   The ``csv`` parser accepts that data that complies with RFC
   :rfc:`4180`. As a result, backslashes are *not* a valid escape
   character. If you use double-quotes to enclose fields in the CSV
   data, you must escape internal double-quote marks by prepending
   another double-quote.
   


.. option:: --file <filename>

   Specifies the location and name of a file containing the data to import.
   If you do not specify a file, :binary:`~bin.mongoimport` reads data from
   standard input (e.g. "stdin").
   


.. option:: --drop

   Modifies the import process so that the target instance drops
   the collection before importing the data from the input.
   


.. option:: --headerline

   If using :option:`--type csv <mongoimport --type>` or :option:`--type
   tsv <mongoimport --type>`, uses the first line as field names.
   Otherwise, :binary:`~bin.mongoimport` will import the first line as a
   distinct document.
   

   If you attempt to include :option:`--headerline` when importing JSON data,
   :program:`mongoimport` will return an error. :option:`--headerline` is only for :term:`csv`
   or :term:`tsv` imports.


.. option:: --upsert

   Modifies the import process to update existing objects in the
   database if they match an imported object, while inserting all
   other objects.
   
   If you do not specify a field or fields using the
   :option:`--upsertFields` :binary:`~bin.mongoimport` will upsert on the
   basis of the ``_id`` field.
   
   Depending on your MongoDB configuration, :option:`--upsert` may impact your
   :binary:`~bin.mongod`'s performance.
   
   .. versionchanged:: 3.0.0
     :option:`--upsertFields` now implies :option:`--upsert`. As such, you may
     prefer to use :option:`--upsertFields` instead of :option:`--upsert`.


.. option:: --upsertFields <field1[,field2]>

   Specifies a list of fields for the query portion of the
   :term:`upsert`. Use this option if the ``_id`` fields in the
   existing documents don't match the field in the document, but
   another field or field combination can uniquely identify
   documents as a basis for performing upsert operations.
   
   .. versionchanged:: 3.0.0
     Modifies the import process to update existing objects in the
     database if they match based on the specified fields, while
     inserting all other objects. You do not need to use :option:`--upsert`
     with :option:`--upsertFields`.
   
     If you do not specify a field, :option:`--upsertFields` will upsert on the basis of
     the ``_id`` field.
   
   To ensure adequate performance, indexes should exist for this
   field or fields.


.. option:: --stopOnError

   Forces :program:`mongoimport` to halt the insert operation at the
   first error rather than continuing the operation despite errors.


.. option:: --jsonArray

   Accepts the import of data expressed with multiple MongoDB documents
   within a single :term:`JSON` array. Limited to
   imports of 16 MB or smaller.
   
   Use :option:`--jsonArray` in conjunction with :option:`mongoexport --jsonArray`.


.. option:: --maintainInsertionOrder

   *Default*: False

   If specified, :program:`mongoimport` inserts the documents in the order of
   their appearance in the input source, otherwise :program:`mongoimport` may
   perform the insertions in an arbitrary order.


.. option:: --numInsertionWorkers int

   *Default*: 1

   .. versionadded:: 3.0.0
   
   Specifies the number of insertion workers to run concurrently.
   

   For large imports, increasing the number of insertion workers
   may increase the speed of the import.
   


.. option:: --writeConcern <document>

   *Default*: majority

   Specifies the :term:`write concern` for each write operation that :program:`mongoimport`
   writes to the target database.
   
   Specify the write concern as a document with :ref:`w options <wc-w>`.


.. option:: --bypassDocumentValidation

   Enables :program:`mongoimport` to bypass :doc:`document validation </core/document-validation>`
   during the operation. This lets you insert documents that do not
   meet the validation requirements.
   
   .. versionadded:: 3.2.1


Use
---

.. include:: /includes/fact-mongoimport-usage.rst
