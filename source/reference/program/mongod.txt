.. _mongod:

==========
``mongod``
==========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Synopsis
--------

:binary:`~bin.mongod` is the primary daemon process for the MongoDB
system. It handles data requests, manages data access, and performs
background management operations.

This document provides a complete overview of all command line options
for :binary:`~bin.mongod`. These command line options are primarily useful
for testing: In common operation, use the :doc:`configuration file
options </reference/configuration-options>` to control the behavior of
your database.

Options
-------

.. only:: (not man)

   .. class:: hidden

      .. binary:: mongod

Core Options
~~~~~~~~~~~~

.. program:: mongod

.. option:: --help, -h

   Returns information on the options and use of :program:`mongod`.


.. option:: --version

   Returns the :program:`mongod` release number.


.. option:: --config <filename>, -f <filename>

   Specifies a configuration file for runtime configuration options. The
   configuration file is the preferred method for runtime configuration of
   :program:`mongod`. The options are equivalent to the command-line
   configuration options. See :doc:`/reference/configuration-options` for
   more information.
   
   Ensure the configuration file uses ASCII encoding. The :program:`mongod`
   instance does not support configuration files with non-ASCII encoding,
   including UTF-8.


.. option:: --verbose, -v

   Increases the amount of internal reporting returned on standard output
   or in log files. Increase the verbosity with the ``-v`` form by
   including the option multiple times, (e.g. ``-vvvvv``.)
   


.. option:: --quiet

   Runs the :program:`mongod` in a quiet mode that attempts to limit the amount
   of output.

   This option suppresses:
   
   - output from :term:`database commands <database command>`
   
   - replication activity
   
   - connection accepted events
   
   - connection closed events


.. option:: --port <port>

   *Default*: 27017

   Specifies the TCP port on which the MongoDB instance listens for
   client connections.


.. option:: --bind_ip <ip address>

   *Default*: All interfaces.

   .. versionchanged:: 2.6.0
      The ``deb`` and ``rpm`` packages include a default configuration
      file (``/etc/mongod.conf``) that sets :option:`--bind_ip` to ``127.0.0.1``.
   
   The IP addresses and/or full Unix domain socket paths on which
   :program:`mongod` should listen for client connections. You may attach
   :program:`mongod` to any interface. To bind to multiple addresses, enter a
   list of comma-separated values.
   
   .. example:: ``localhost,/tmp/mongod.sock``
   
   You can specify both IPv4 and IPv6 addresses, or hostnames that
   resolve to an IPv4 or IPv6 address.
   
   .. example:: ``localhost, 2001:0DB8:e132:ba26:0d5c:2774:e7f9:d513``
   
   .. note::
   
      If specifying an IPv6 address *or* a hostname that resolves to an
      IPv6 address to :option:`--bind_ip`, you must start :program:`mongod` with 
      :option:`--ipv6` to enable IPv6 support. Specifying an IPv6 address
      to :option:`--bind_ip` does not enable IPv6 support.
   
   If specifying a 
   `link-local IPv6 address <https://en.wikipedia.org/w/index.php?title=Link-local_address&oldid=880793020#IPv6>`_ 
   (``fe80::/10``), you must append the 
   `zone index <https://en.wikipedia.org/w/index.php?title=IPv6_address&oldid=877601778#Scoped_literal_IPv6_addresses>`_
   to that address (i.e. ``fe80::<address>%<adapter-name>``). 
   
   .. example:: ``localhost,fe80::a00:27ff:fee0:1fcf%enp0s3``
   
   .. include:: /includes/tip-hostnames.rst
   
   .. include:: /includes/warning-bind-ip-security-considerations.rst

   To bind to all IPv4 addresses, enter ``0.0.0.0``.
   
   To bind to all IPv4 and IPv6 addresses, enter ``0.0.0.0,::``.
   


.. option:: --ipv6

   
   Enables IPv6 support. :program:`mongod` disables IPv6 support by default.
   
   Setting :option:`--ipv6` does *not* direct the :program:`mongod` to listen on any
   local IPv6 addresses or interfaces. To configure the :program:`mongod` to
   listen on an IPv6 interface, you must configure :option:`--bind_ip` with one
   or more IPv6 addresses or hostnames that resolve to IPv6 addresses.


.. option:: --maxConns <number>

   The maximum number of simultaneous connections that :program:`mongod` will
   accept. This setting has no effect if it is higher than your operating
   system's configured maximum connection tracking threshold.
   
   Do not assign too low of a value to this option, or you will encounter errors
   during normal application operation.

   .. include:: /includes/note-max-conns-max.rst
   


.. option:: --logpath <path>

   Sends all diagnostic logging information to a log file instead of to
   standard output or to the host's :term:`syslog` system. MongoDB creates
   the log file at the path you specify.
   
   By default, MongoDB will move any existing log file rather than overwrite
   it. To instead append to the log file, set the :option:`--logappend` option.
   


.. option:: --syslog

   Sends all logging output to the host's :term:`syslog` system rather
   than to standard output or to a log file. , as with :option:`--logpath`.
   
   The :option:`--syslog` option is not supported on Windows.


.. option:: --syslogFacility <string>

   *Default*: user

   Specifies the facility level used when logging messages to syslog.
   The value you specify must be supported by your
   operating system's implementation of syslog. To use this option, you
   must enable the :option:`--syslog` option..


.. option:: --logappend

   Appends new entries to the end of the existing log file when the :program:`mongod`
   instance restarts. Without this option, :binary:`~bin.mongod` will back up the
   existing log and create a new file.


.. option:: --logRotate <string>

   *Default*: rename

   
   .. versionadded:: 3.0.0
   
   Determines the behavior for the :dbcommand:`logRotate` command.
   Specify either ``rename`` or ``reopen``:
   
   - ``rename`` renames the log file.
   
   - ``reopen`` closes and reopens the log file following the typical
     Linux/Unix log rotate behavior. Use ``reopen`` when using the
     Linux/Unix logrotate utility to avoid log loss.
   
     If you specify ``reopen``, you must also use :option:`--logappend`.


.. option:: --timeStampFormat <string>

   *Default*: iso8601-local

   The time format for timestamps in log messages. Specify one of the
   following values:
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - ``ctime``
   
        - Displays timestamps as ``Wed Dec 31
          18:17:54.811``.
   
      * - ``iso8601-utc``
   
        - Displays timestamps in Coordinated Universal Time (UTC) in the
          ISO-8601 format. For example, for New York at the start of the
          Epoch: ``1970-01-01T00:00:00.000Z``
   
      * - ``iso8601-local``
   
        - Displays timestamps in local time in the ISO-8601
          format. For example, for New York at the start of the Epoch:
          ``1969-12-31T19:00:00.000-0500``
   




.. option:: --pidfilepath <path>

   Specifies a file location to hold the process ID of the :program:`mongod`
   process where :program:`mongod` will write its PID. This is useful for
   tracking the :program:`mongod` process in combination with the
   the :option:`--fork` option. Without a specified :option:`--pidfilepath` option, the
   process creates no PID file.


.. option:: --keyFile <file>

   Specifies the path to a key file that stores the shared secret
   that MongoDB instances use to authenticate to each other in a
   :term:`sharded cluster` or :term:`replica set`. :option:`--keyFile` implies
   :option:`--auth`. See :ref:`inter-process-auth` for more
   information.


.. option:: --setParameter <options>

   Specifies one of the MongoDB parameters described in
   :doc:`/reference/parameters`. You can specify multiple ``setParameter``
   fields.
   


.. option:: --httpinterface

   
   .. include:: /includes/fact-deprecated-http-interface.rst
   
   Enables the HTTP interface. Enabling the interface can increase
   network exposure.
   
   Leave the HTTP interface *disabled* for production deployments. If you
   *do* enable this interface, you should only allow trusted clients to
   access this port. See :ref:`security-firewalls`.
   
   .. note::
   
      - .. include:: /includes/fact-http-interface-kerberos.rst
   
   .. versionadded:: 2.6


.. COMMENT clusterAuthMode moved to SSL section

.. option:: --nounixsocket

   Disables listening on the UNIX domain socket. :option:`--nounixsocket` applies only
   to Unix-based systems.

   The :program:`mongod` process
   always listens on the UNIX socket unless one of the following is true:
   
   - :option:`--nounixsocket` is set
   
   - :setting:`net.bindIp` is not set
   
   - :setting:`net.bindIp` does not specify ``127.0.0.1``
   
   .. |mongodb-package| replace:: :program:`mongod`
   
   .. include:: /includes/note-deb-and-rpm-default-to-localhost.rst


.. option:: --unixSocketPrefix <path>

   *Default*: /tmp

   The path for the UNIX socket. :option:`--unixSocketPrefix` applies only
   to Unix-based systems.
   
   If this option has no value, the
   :program:`mongod` process creates a socket with ``/tmp`` as a prefix. MongoDB
   creates and listens on a UNIX socket unless one of the following is true:
   
   - :setting:`net.unixDomainSocket.enabled` is ``false``
   
   - :option:`--nounixsocket` is set
   
   - :setting:`net.bindIp` is not set
   
   - :setting:`net.bindIp` does not specify ``127.0.0.1``


.. option:: --filePermissions <path>

   *Default*: ``0700``

   Sets the permission for the UNIX domain socket file.
   
   :option:`--filePermissions` applies only to Unix-based systems.


.. option:: --fork

   Enables a :term:`daemon` mode that runs the :program:`mongod` process in the
   background. By default :program:`mongod` does not run as a daemon:
   typically you will run :program:`mongod` as a daemon, either by using
   :option:`--fork` or by using a controlling process that handles the
   daemonization process (e.g. as with ``upstart`` and ``systemd``).
   
   The :option:`--fork` option is not supported on Windows.


.. option:: --auth

   Enables authorization to control user's access to database resources
   and operations. When authorization is enabled, MongoDB requires all
   clients to authenticate themselves first in order to determine the
   access for the client.
   
   Configure users via the :doc:`mongo shell
   </reference/program/mongo>`. If no users exist, the localhost interface
   will continue to have access to the database until you create
   the first user.
   
   See :doc:`Security </security>`
   for more information.
   


.. option:: --noauth

   Disables authentication. Currently the default. Exists for future
   compatibility and clarity.
   


.. option:: --jsonp

   Permits :term:`JSONP` access via an HTTP interface. Enabling the
   interface can increase network exposure. The :option:`--jsonp` option enables the
   HTTP interface, even if the :setting:`HTTP interface <net.http.enabled>`
   option is disabled.
   
   .. include:: /includes/fact-deprecated-http-interface.rst


.. option:: --rest

   Enables the simple :term:`REST` API. Enabling the :term:`REST` API
   enables the HTTP interface, even if the :setting:`HTTP interface
   <net.http.enabled>` option is disabled, and as a result can increase
   network exposure.
   
   .. include:: /includes/fact-deprecated-http-interface.rst


.. option:: --slowms <integer>

   *Default*: 100

   The threshold in milliseconds at which the database profiler considers a
   query slow. MongoDB records all slow queries to the log, even when the
   database profiler is off. When the profiler is on, it writes to the
   ``system.profile`` collection. See the :dbcommand:`profile` command for
   more information on the database profiler.
   


.. option:: --profile <level>

   *Default*: 0

   Changes the level of database profiling, which inserts information about
   operation performance into the ``system.profile`` collection. Specify one
   of the following levels:
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Level
   
        - Setting
   
      * - 0
   
        - Off. No profiling.
   
      * - 1
   
        - On. Only includes slow operations.
   
      * - 2
   
        - On. Includes all operations.
   
   Database profiling can impact database
   performance. Enable this option only after careful consideration.
   


.. option:: --cpu

   Forces the :program:`mongod` process to report the percentage of CPU time in
   write lock, every four seconds.


.. option:: --sysinfo

   Returns diagnostic system information and then exits. The
   information provides the page size, the number of physical pages,
   and the number of available physical pages.
   


.. option:: --noscripting

   Disables the scripting engine.
   


.. option:: --notablescan

   Forbids operations that require a collection scan. See :parameter:`notablescan` for additional information.
   


.. option:: --shutdown

   The :option:`--shutdown` option cleanly and safely terminates the :program:`mongod`
   process. When invoking :program:`mongod` with this option you must set the
   :option:`--dbpath` option either directly or by way of the
   :doc:`configuration file </reference/configuration-options>` and the
   :option:`--config` option.
   
   The :option:`--shutdown` option is available only on Linux systems.


Storage Options
~~~~~~~~~~~~~~~

.. option:: --storageEngine string

   *Default*: ``wiredTiger``

   .. versionadded:: 3.0
   
   .. versionchanged:: 3.2
   
      Starting in MongoDB 3.2, ``wiredTiger`` is the default.
   
   Specifies the storage engine for the :program:`mongod` database. Available
   values include:
   
   .. list-table::
      :header-rows: 1
      :widths: 20 80
   
      * - Value
        - Description
   
      * - ``mmapv1``
        - To specify the :doc:`/core/mmapv1`.
   
      * - ``wiredTiger``
        - To specify the :doc:`/core/wiredtiger`.
   
      * - ``inMemory``
   
        - To specify the :doc:`/core/inmemory`.
   
          .. versionadded:: 3.2
             Available in MongoDB Enterprise only.

   If you attempt to start a :program:`mongod` with a
   :option:`--dbpath` that contains data files produced by a
   storage engine other than the one specified by :option:`--storageEngine`, :program:`mongod`
   will refuse to start.


.. option:: --dbpath <path>

   *Default*: ``/data/db`` on Linux and macOS, ``\data\db`` on Windows

   The directory where the :program:`mongod` instance stores its data.
   
   If you
   installed MongoDB using a package management system, check the
   ``/etc/mongod.conf`` file provided by your packages to see the
   directory is specified.

   .. versionchanged:: 3.0
      The files in :option:`--dbpath` must correspond to the storage engine
      specified in :option:`--storageEngine`. If the data files do not
      correspond to :option:`--storageEngine`, :program:`mongod` will refuse to
      start.


.. option:: --directoryperdb

   Uses a separate directory to store data for each database. The
   directories are under the :option:`--dbpath` directory, and each subdirectory
   name corresponds to the database name.
   
   .. versionchanged:: 3.0
   
      To change the :option:`--directoryperdb` option for existing deployments, you must
      restart the :binary:`~bin.mongod` instances with the new :option:`--directoryperdb`
      value **and** a new data directory (:option:`--dbpath \<new path\> <--dbpath>`), and then
      repopulate the data.
   
      - For standalone instances, you can use :binary:`~bin.mongodump` on
        the existing instance, stop the instance, restart with the new
        :option:`--directoryperdb` value **and** a new data directory, and use
        :binary:`~bin.mongorestore` to populate the new data directory.
   
      - For replica sets, you can update in a rolling manner by stopping
        a secondary member, restart with the new :option:`--directoryperdb` value **and**
        a new data directory, and use :ref:`initial sync
        <replica-set-initial-sync>` to populate the new data directory.
        To update all members, start with the secondary members first.
        Then step down the primary, and update the stepped-down member.

   .. include:: /includes/not-available-for-inmemory-storage-engine.rst
   


.. option:: --noIndexBuildRetry

   Stops the :program:`mongod` from rebuilding incomplete indexes on the next
   start up. This applies in cases where the :program:`mongod` restarts after it
   has shut down or stopped in the middle of an index build. In such cases,
   the :program:`mongod` always removes any incomplete indexes, and then also, by
   default, attempts to rebuild them. To stop the :program:`mongod` from
   rebuilding incomplete indexes on start up, include this option on the
   command-line.

   .. include:: /includes/not-available-for-inmemory-storage-engine.rst
   


.. option:: --noprealloc

   
   .. deprecated:: 2.6
   
      By default, MongoDB does not preallocate data files. The option
      exists for compatibility and clarity.
   
   Disables the preallocation of data files.
   


.. option:: --nssize <value>

   *Default*: 16

   Specifies the default size for namespace files, which are files that end
   in ``.ns``. Each collection and index counts as a namespace.
   
   Use this setting to control size for newly created namespace files. This
   option has no impact on existing files. The maximum size for a namespace
   file is 2047 megabytes. The default value of 16 megabytes provides for
   approximately 24,000 namespaces.


.. option:: --quota

   Enables a maximum limit for the number data files each database can
   have. When running with the :option:`--quota` option, MongoDB has a maximum of 8
   data files per database. Adjust the quota with
   :option:`--quotaFiles`.


.. option:: --quotaFiles <number>

   *Default*: 8

   Modifies the limit on the number of data files per database. :option:`--quotaFiles`
   option requires that you set :option:`--quota`.


.. option:: --smallfiles

   Sets MongoDB to use a smaller default file size. The :option:`--smallfiles` option
   reduces the initial size for data files and limits the maximum size to
   512 megabytes. :option:`--smallfiles` also reduces the size of each :term:`journal`
   file from 1 gigabyte to 128 megabytes. Use :option:`--smallfiles` if you have a large
   number of databases that each holds a small quantity of data.
   
   The :option:`--smallfiles` option can lead the :program:`mongod` instance to create a large
   number of files, which can affect performance for larger databases.


.. option:: --syncdelay <value>

   *Default*: 60

   Controls how much time can pass before MongoDB flushes data to the data
   files via an :term:`fsync` operation.
   
   **Do not set this value on
   production systems.** In almost every situation, you should use the
   default setting.
   
   .. warning::
   
      If you set :option:`--syncdelay` to ``0``, MongoDB will not sync the
      memory mapped files to disk.
   
   The :program:`mongod` process writes data very quickly to the journal and
   lazily to the data files. :option:`--syncdelay` has no effect on the
   :setting:`journal <storage.journal.enabled>` files or :doc:`journaling </core/journaling>`,
   but if :option:`--syncdelay` is set to ``0`` the journal will eventually consume
   all available disk space. If you set :option:`--syncdelay` to ``0`` for testing
   purposes, you should also set :option:`--nojournal <mongod --nojournal>`
   to ``true``.
   
   The :dbcommand:`serverStatus` command reports the background flush
   thread's status via the :serverstatus:`backgroundFlushing` field.

   .. include:: /includes/not-available-for-inmemory-storage-engine.rst
   


.. option:: --upgrade

   Upgrades the on-disk data format of the files specified by the
   :option:`--dbpath` to the latest version, if needed.
   
   This option only affects the operation of the :program:`mongod` if the data
   files are in an old format.
   
   In most cases you should not set this value, so you can exercise the
   most control over your upgrade process. See the MongoDB `release notes
   <http://www.mongodb.org/downloads>`_ (on the download page) for more
   information about the upgrade process.


.. option:: --repair

   Runs a repair routine on all databases. This is equivalent
   to shutting down and running the :dbcommand:`repairDatabase` database
   command on all databases.
   
   .. include:: /includes/warning-repair.rst
   
   .. include:: /includes/note-repair.rst
   
   .. versionchanged:: 2.1.2
   
   If you run the repair option *and* have data in a journal file, the
   :program:`mongod` instance refuses to start. In these cases you should start
   the :program:`mongod` without the :option:`--repair` option, which allows the
   :program:`mongod` to recover data from the journal. This completes more
   quickly and is more likely to produce valid data files. To continue the
   repair operation despite the journal files, shut down the :program:`mongod`
   cleanly and restart with the :option:`--repair` option.
   
   The :option:`--repair` option copies data from the source data files into new data
   files in the :setting:`~storage.repairPath` and then replaces the original data
   files with the repaired data files.


.. option:: --repairpath <path>

   *Default*: A ``_tmp_repairDatabase_<num>`` directory under the
   :setting:`~storage.dbPath`.

   Specifies a working directory that MongoDB will use during the
   :option:`--repair <mongod --repair>` operation. When ``--repair`` completes, the
   :option:`--repairpath` directory is empty, and
   :setting:`~storage.dbPath` contains the repaired files.

   The :option:`--repairpath` must be within the :setting:`~storage.dbPath`. You can
   specify a symlink to :option:`--repairpath` to use a path on a different file
   system.
   
   Only available for :binary:`~bin.mongod` instance using the MMAPv1 storage engine.
   
   .. SEE: SERVER-4266


.. option:: --journal

   Enables the durability :term:`journal` to ensure data files remain valid
   and recoverable. This option applies only when you specify the
   :option:`--dbpath` option. The :program:`mongod` enables journaling by default
   on 64-bit builds of versions after 2.0.

   
   .. include:: /includes/not-available-for-inmemory-storage-engine.rst
   


.. option:: --nojournal

   Disables :doc:`/core/journaling`. :binary:`~bin.mongod` enables
   journaling by default.
   
   Not available for mongod instances that use the
   :doc:`in-memory storage engine </core/inmemory>`.
   
   .. warning::
   
      .. include:: /includes/warning-disable-journaling.rst
   

   .. include:: /includes/not-available-for-inmemory-storage-engine.rst
   


.. option:: --journalOptions <arguments>

   Provides functionality for testing. Not for general use, and will affect data
   file integrity in the case of abnormal system shutdown.
   

   .. include:: /includes/not-available-for-inmemory-storage-engine.rst
   


.. option:: --journalCommitInterval <value>

   *Default*: 100 or 30

   
   .. versionchanged:: 3.2
   
   The maximum amount of time in milliseconds that
   the :program:`mongod` process allows between
   journal operations. Values can range from 1 to 500 milliseconds. Lower
   values increase the durability of the journal, at the expense of disk
   performance. The default journal commit interval is 100 milliseconds.
   
   On MMAPv1, if the journal is on a different block device (e.g. physical
   volume, RAID device, or LVM volume) than the data files, the default journal
   commit interval is 30 milliseconds. Additionally, on MMAPv1, when a write
   operation with ``j:true`` is pending, :program:`mongod` will reduce
   :setting:`~storage.journal.commitIntervalMs` to a third of the set value.
   
   On WiredTiger, the default journal commit interval is 100 milliseconds. Additionally,
   a write with ``j:true`` will cause an immediate sync of the journal.

   .. include:: /includes/not-available-for-inmemory-storage-engine.rst
   


.. _cli-wiredtiger-options:

WiredTiger Options
~~~~~~~~~~~~~~~~~~

.. option:: --wiredTigerCacheSizeGB float

   
   .. versionadded:: 3.0
   
   Defines the maximum size of the internal cache that WiredTiger will
   use for all data.
   
   .. include:: /includes/extracts/wt-cache-default-setting.rst
   
   Avoid increasing the WiredTiger internal cache size above its
   default value.

   .. include:: /includes/extracts/wt-cache-additional-constraints-mongod-cmdline-option.rst
   


.. option:: --wiredTigerJournalCompressor <compressor>

   *Default*: snappy

   
   .. versionadded:: 3.0.0
   
   Specifies the type of compression to use to compress WiredTiger
   journal data.
   
   Available compressors are:
   
   - ``none``
   
   - :term:`snappy`
   
   - :term:`zlib`


.. option:: --wiredTigerDirectoryForIndexes

   .. versionadded:: 3.0.0
   
   When you start :program:`mongod` with :option:`--wiredTigerDirectoryForIndexes`, :program:`mongod` stores indexes and collections in separate
   subdirectories under the data (i.e. :option:`--dbpath`) directory.
   Specifically, :program:`mongod` stores the indexes in a subdirectory named
   ``index`` and the collection data in a subdirectory named
   ``collection``.
   
   By using a symbolic link, you can specify a different location for
   the indexes. Specifically, when :binary:`~bin.mongod` instance is **not**
   running, move the ``index`` subdirectory to the destination and
   create a symbolic link named ``index`` under the data directory to
   the new destination.


.. option:: --wiredTigerCollectionBlockCompressor <compressor>

   *Default*: snappy

   
   .. versionadded:: 3.0.0
   
   Specifies the default type of compression to use to compress collection
   data. You can override this on a per-collection basis when creating
   collections.
   
   Available compressors are:
   
   - ``none``
   
   - :term:`snappy`
   
   - :term:`zlib`
   
   :option:`--wiredTigerCollectionBlockCompressor` affects all collections created. If you change
   the value of :option:`--wiredTigerCollectionBlockCompressor` on an existing MongoDB deployment, all new
   collections will use the specified compressor. Existing collections
   will continue to use the compressor specified when they were
   created, or the default compressor at that time.


.. option:: --wiredTigerIndexPrefixCompression <boolean>

   *Default*: true

   
   .. versionadded:: 3.0.0
   
   Enables or disables :term:`prefix compression` for index data.
   
   Specify ``true`` for :option:`--wiredTigerIndexPrefixCompression` to enable :term:`prefix compression` for
   index data, or ``false`` to disable prefix compression for index data.
   
   The :option:`--wiredTigerIndexPrefixCompression` setting affects all indexes created. If you change
   the value of :option:`--wiredTigerIndexPrefixCompression` on an existing MongoDB deployment, all new
   indexes will use prefix compression. Existing indexes
   are not affected.


.. _cli-mongod-replica-set:

Replication Options
~~~~~~~~~~~~~~~~~~~

.. option:: --replSet <setname>

   Configures replication. Specify a replica set name as an argument to
   this set. All hosts in the replica set must have the same set name.
   
   .. include:: /includes/fact-unique-replica-set-names.rst
   


.. option:: --oplogSize <value>

   Specifies a maximum size in megabytes for the replication operation log
   (i.e., the :term:`oplog`). The :program:`mongod` process creates an
   :term:`oplog` based on the maximum amount of space available. For 64-bit
   systems, the oplog is typically 5% of available disk space. Once the
   :program:`mongod` has created the oplog for the first time, changing the
   :option:`--oplogSize` option will not affect the size of the oplog.
   
   See :ref:`replica-set-oplog-sizing` for more information.


.. option:: --replIndexPrefetch

   *Default*: all

   .. |feature| replace:: :option:`--replIndexPrefetch`
   .. include:: /includes/fact-feature-is-mmapv1-only.rst
   
   Determines which indexes :term:`secondary` members of a :term:`replica
   set` load into memory before applying operations from the oplog. By
   default secondaries load all indexes related to an operation into memory
   before applying operations from the oplog.
   
   Set this option to one of the following:
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - ``none``
   
        - Secondaries do not load indexes into memory.
   
      * - ``all``
   
        - Secondaries load all indexes related to an operation.
   
      * - ``_id_only``
   
        - Secondaries load no additional indexes into memory beyond the
          already existing ``_id`` index.


.. option:: --enableMajorityReadConcern

   
   .. versionadded:: 3.2
   
   Enables :term:`read concern` level of ``"majority"``. By default,
   ``"majority"`` level is not enabled.
   


.. _cli-mongod-master-slave:

Master-Slave Replication
~~~~~~~~~~~~~~~~~~~~~~~~

These options provide access to conventional master-slave database
replication. While this functionality remains accessible in MongoDB,
replica sets are the preferred configuration for database replication.

.. include:: /includes/extracts/master-slave-deprecated-for-sharded-cluster-deprecated-directive.rst

.. option:: --master

   Configures the :program:`mongod` to run as a replication :term:`master`.


.. option:: --slave

   Configures the :program:`mongod` to run as a replication :term:`slave`.


.. option:: --source <host><:port>

   For use with the :option:`--slave` option, the ``--source`` option
   designates the server that this instance will replicate.
   


.. option:: --only <arg>

   For use with the :option:`--slave` option, the ``--only`` option
   specifies only a single :term:`database` to replicate.
   


.. option:: --slavedelay <value>

   For use with the :option:`--slave` option, the :option:`--slavedelay`
   option configures a "delay" in seconds, for this slave to wait to
   apply operations from the :term:`master` node.


.. option:: --autoresync

   For use with the :option:`--slave` option. When set,
   the :option:`--autoresync` option allows this slave to automatically
   resync if it is more than 10 seconds behind the master. This
   setting may be problematic if the :option:`--oplogSize` specifies
   a too small oplog.
   
   If the :term:`oplog` is not large enough to store the difference in
   changes between the master's current state and the state of the slave,
   this instance will forcibly resync itself unnecessarily. If you don't
   specify :option:`--autoresync`, the slave will not attempt an automatic resync more
   than once in a ten minute period.


.. option:: --fastsync

   In the context of :term:`replica set` replication, set this option
   if you have seeded this member with an up-to-date copy of the entire
   :setting:`~storage.dbPath` of another member of the set. Otherwise the
   :program:`mongod` will attempt to perform an initial sync,
   as though the member were a new member.
   
   .. warning::
      If the data is not perfectly synchronized *and*
      the :program:`mongod` starts with :option:`fastsync <mongod --fastsync>`, then the
      secondary or slave will be permanently out of sync with the
      primary, which may cause significant consistency problems.


Sharded Cluster Options
~~~~~~~~~~~~~~~~~~~~~~~

.. option:: --configsvr

   
   Declares that this :program:`mongod` instance serves as the
   :term:`config database` of a sharded cluster. When running with
   this option, clients (i.e. other cluster components) will not be
   able to write data to any database other than ``config`` and
   ``admin``. The default port for a :program:`mongod` with this option is
   ``27019`` and the default :option:`--dbpath` directory is
   ``/data/configdb``, unless specified.
   
   If using :doc:`/core/mmapv1`, :option:`--configsvr` option also sets :option:`--smallfiles`.
   
   The :option:`--configsvr` option creates a local :term:`oplog`.
   
   Do not use the :option:`--configsvr` option with :option:`--shardsvr`. Config
   servers cannot be a shard server.
   
   .. versionchanged:: 3.2
   
      .. include:: /includes/fact-mirrored-config-servers-deprecated.rst
   
      In previous versions, :option:`--configsvr` could not be used in conjunction with
      :option:`--replSet`.
   
   .. versionchanged:: 3.2.19
   
      Do not use the :option:`--configsvr` option with the
      :parameter:`skipShardingConfigurationChecks` parameter. That is,
      if you are temporarily starting the :binary:`~bin.mongod` as a
      standalone for maintenance operations, include the parameter
      :parameter:`skipShardingConfigurationChecks` and exclude :option:`--configsvr`.
      Once maintenance has completed, remove the
      :parameter:`skipShardingConfigurationChecks` parameter and restart
      with :option:`--configsvr`.


.. option:: --configsvrMode <string>

   **Available in MongoDB 3.2 version only**
   
   If set to ``sccc``, indicates that the config servers are deployed
   as three mirrored :binary:`~bin.mongod` instances, even if one or more
   config servers is also a member of a replica set. ``configsvrMode``
   only accepts the value ``sccc``.
   
   If unset, config servers running as replica sets expect to use the
   "config server replica set" protocol for writing to config servers,
   rather than the "mirrored mongod" write protocol.
   


.. option:: --shardsvr

   *Required if starting a shard server.*
   
   Configures this :program:`mongod` instance as a shard in a
   sharded cluster. The default port for these instances is
   ``27018``.
   
   .. versionchanged:: 3.2.19
   
      Do not use the :option:`--shardsvr` option with the
      :parameter:`skipShardingConfigurationChecks` parameter. That is,
      if you are temporarily starting the :binary:`~bin.mongod` as a
      standalone for maintenance operations, include the parameter
      :parameter:`skipShardingConfigurationChecks` and exclude :option:`--shardsvr`.
      Once maintenance has completed, remove the
      :parameter:`skipShardingConfigurationChecks` parameter and restart
      with :option:`--shardsvr`.


.. option:: --moveParanoia

   If specified, during chunk migration, a shard saves,
   to the ``moveChunk`` directory of the ``--dbpath``, all documents
   migrated from that shard.
   
   MongoDB does not automatically delete the data saved in the
   ``moveChunk`` directory.


.. option:: --noMoveParanoia

   .. versionchanged:: 3.2
      Starting in 3.2, MongoDB uses ``--noMoveParanoia`` as the default.
   
   During chunk migration, a shard does not save documents migrated from
   the shard.


TLS/SSL Options
~~~~~~~~~~~~~~~

.. see:: :doc:`/tutorial/configure-ssl` for full
   documentation of MongoDB's support.

.. option:: --sslOnNormalPorts

   .. deprecated:: 2.6 Use :option:`--sslMode requireSSL <--sslMode>` instead.
   
   Enables TLS/SSL for :program:`mongod`.
   
   With :option:`--sslOnNormalPorts`, a :program:`mongod` requires TLS/SSL encryption for all
   connections on the default MongoDB port, or the port specified by
   :option:`--port`. By default, :option:`--sslOnNormalPorts` is
   disabled.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslMode <mode>

   .. versionadded:: 2.6
   
   Enables TLS/SSL or mixed TLS/SSL used for all network connections. The
   argument to the :option:`--sslMode` option can be one of the following:
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - ``disabled``
   
        - The server does not use TLS/SSL.
   
      * - ``allowSSL``
   
        - Connections between servers do not use TLS/SSL. For incoming
          connections, the server accepts both TLS/SSL and non-TLS/non-SSL.
   
      * - ``preferSSL``
   
        - Connections between servers use TLS/SSL. For incoming
          connections, the server accepts both TLS/SSL and non-TLS/non-SSL.
   
      * - ``requireSSL``
   
        - The server uses and accepts only TLS/SSL encrypted connections.
   
   .. include:: /includes/extracts/ssl-facts-x509-ca-file.rst
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslPEMKeyFile <filename>

   Specifies the :file:`.pem` file that contains both the TLS/SSL certificate
   and key. Specify the file name of the :file:`.pem` file using relative
   or absolute paths.
   
   You must specify :option:`--sslPEMKeyFile` when TLS/SSL is enabled.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslPEMKeyPassword <value>

   Specifies the password to de-crypt the certificate-key file (i.e.
   :option:`--sslPEMKeyFile`). Use the :option:`--sslPEMKeyPassword` option only if the
   certificate-key file is encrypted. In all cases, the :program:`mongod` will
   redact the password from all logging and reporting output.
   
   .. versionchanged:: 2.6
      If the private key in the PEM file is encrypted and you do not
      specify the :option:`--sslPEMKeyPassword` option, the :program:`mongod` will prompt for a
      passphrase. See :ref:`ssl-certificate-password`.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. COMMENT moved clusterAuthMode to here from above

.. option:: --clusterAuthMode <option>

   *Default*: keyFile

   .. versionadded:: 2.6
   
   The authentication mode used for cluster authentication. If you use
   :ref:`internal x.509 authentication <x509-internal-authentication>`,
   specify so here. This option can have one of the following values:
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - ``keyFile``
   
        - Use a keyfile for authentication.
          Accept only keyfiles.
   
      * - ``sendKeyFile``
   
        - For rolling upgrade purposes. Send a keyfile for
          authentication but can accept both keyfiles and x.509
          certificates.
   
      * - ``sendX509``
   
        - For rolling upgrade purposes. Send the x.509 certificate for
          authentication but can accept both keyfiles and x.509
          certificates.
   
      * - ``x509``
   
        - Recommended. Send the x.509 certificate for authentication and
          accept only x.509 certificates.
   
   .. include:: /includes/extracts/ssl-facts-x509-ca-file.rst
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslClusterFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains the x.509 certificate-key
   file for :ref:`membership authentication <x509-internal-authentication>`
   for the cluster or replica set.
   
   If :option:`--sslClusterFile` does not specify the ``.pem`` file for internal cluster
   authentication, the cluster uses the ``.pem`` file specified in the
   :option:`--sslPEMKeyFile` option.
   
   .. include:: /includes/extracts/ssl-facts-x509-ca-file.rst
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslClusterPassword <value>

   .. versionadded:: 2.6
   
   Specifies the password to de-crypt the x.509 certificate-key file
   specified with ``--sslClusterFile``. Use the :option:`--sslClusterPassword` option only
   if the certificate-key file is encrypted. In all cases, the :program:`mongod`
   will redact the password from all logging and reporting output.
   
   If the x.509 key file is encrypted and you do not specify the
   :option:`--sslClusterPassword` option, the :program:`mongod` will prompt for a passphrase. See
   :ref:`ssl-certificate-password`.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslCAFile <filename>

   
   Specifies the :file:`.pem` file that contains the root certificate chain
   from the Certificate Authority. Specify the file name of the
   :file:`.pem` file using relative or absolute paths.
   
   .. include:: /includes/extracts/ssl-facts-x509-ca-file.rst
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslCRLFile <filename>

   
   Specifies the the :file:`.pem` file that contains the Certificate Revocation
   List. Specify the file name of the :file:`.pem` file using relative or
   absolute paths.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslAllowInvalidCertificates

   
   Bypasses the validation checks for TLS/SSL certificates on other
   servers in the cluster and allows the use of invalid certificates to
   connect.
   
   .. note::
   
      .. include:: /includes/extracts/ssl-facts-x509-invalid-certificate.rst
   
   When using
   the :option:`--sslAllowInvalidCertificates` setting, MongoDB
   logs a warning regarding the use of the invalid certificate.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslAllowInvalidHostnames

   .. versionadded:: 3.0
   
   Disables the validation of the hostnames in TLS/SSL certificates,
   when connecting to other members of the replica set or sharded cluster
   for inter-process authentication. This allows :program:`mongod` to connect
   to other members if the hostnames in their certificates do not match
   their configured hostname.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslAllowConnectionsWithoutCertificates

   Disables the requirement for TLS/SSL certificate validation that
   ``--sslCAFile`` enables. With the :option:`--sslAllowConnectionsWithoutCertificates` option, the :program:`mongod`
   will accept connections when the client does not present a certificate
   when establishing the connection.
   
   If the client presents a certificate and the :program:`mongod` has :option:`--sslAllowConnectionsWithoutCertificates`
   enabled, the :program:`mongod` will validate the certificate using the root
   certificate chain specified by ``--sslCAFile`` and reject clients
   with invalid certificates.
   
   Use the :option:`--sslAllowConnectionsWithoutCertificates` option if you have a mixed deployment that includes
   clients that do not or cannot present certificates to the :program:`mongod`.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslDisabledProtocols <protocol(s)>

   .. versionadded:: 3.0.7
   
   Prevents a MongoDB server running with TLS/SSL from accepting incoming
   connections that use a specific protocol or protocols. :option:`--sslDisabledProtocols`
   recognizes the following protocols: ``TLS1_0``, ``TLS1_1``, and
   ``TLS1_2``. Specifying an unrecognized protocol will prevent the
   server from starting.
   
   To specify multiple protocols, use a comma separated list of
   protocols.
   
   Members of replica sets and sharded clusters must speak at least one
   protocol in common.
   
   .. seealso:: :ref:`ssl-disallow-protocols`


.. option:: --sslFIPSMode

   Directs the :program:`mongod` to use the FIPS mode of the installed OpenSSL
   library. Your system must have a FIPS
   compliant OpenSSL library to use the :option:`--sslFIPSMode` option.
   
   .. include:: /includes/note-fips-is-enterprise-only.rst


Audit Options
~~~~~~~~~~~~~

.. option:: --auditDestination

   
   Enables :doc:`auditing </core/auditing>` and specifies where
   :program:`mongod` sends all audit events.

   :option:`--auditDestination` can have one of the following values:
   
   .. list-table::
      :header-rows: 1
      :widths: 15 50
   
      * - Value
   
        - Description
   
      * - ``syslog``
   
        - Output the audit events to syslog in JSON format. Not available on
          Windows. Audit messages have a syslog severity level of ``info``
          and a facility level of ``user``.
   
          The syslog message limit can result in the truncation of
          audit messages. The auditing system will neither detect the
          truncation nor error upon its occurrence.
   
      * - ``console``
   
        - Output the audit events to ``stdout`` in JSON format.
   
      * - ``file``
   
        - Output the audit events to the file specified in
          :option:`--auditPath` in the format specified in
          :option:`--auditFormat`.
   
   .. include:: /includes/note-audit-in-enterprise-only.rst


.. option:: --auditFormat

   .. versionadded:: 2.6
   
   Specifies the format of the output file for :doc:`auditing
   </core/auditing>` if :option:`--auditDestination` is ``file``. The
   :option:`--auditFormat` option can have one of the following values:
   
   .. list-table::
      :header-rows: 1
      :widths: 15 50
   
      * - Value
   
        - Description
   
      * - ``JSON``
   
        - Output the audit events in JSON format to the file specified
          in :option:`--auditPath`.
   
      * - ``BSON``
   
        - Output the audit events in BSON binary format to the file
          specified in :option:`--auditPath`.
   
   Printing audit events to a file in JSON format degrades server
   performance more than printing to a file in BSON format.
   
   .. include:: /includes/note-audit-in-enterprise-only.rst


.. option:: --auditPath

   .. versionadded:: 2.6
   
   Specifies the output file for :doc:`auditing </core/auditing>` if
   :option:`--auditDestination` has value of ``file``. The :option:`--auditPath`
   option can take either a full path name or a relative path name.
   
   .. include:: /includes/note-audit-in-enterprise-only.rst


.. option:: --auditFilter

   .. versionadded:: 2.6
   
   Specifies the filter to limit the :ref:`types of operations
   <audit-action-details-results>` the :doc:`audit system
   </core/auditing>` records. The option takes a string representation
   of a query document of the form:
   
   .. code-block:: javascript
   
      { <field1>: <expression1>, ... }
   
   The ``<field>`` can be :doc:`any field in the audit message
   </reference/audit-message>`, including fields returned in the
   :ref:`param <audit-action-details-results>` document. The
   ``<expression>`` is a :ref:`query condition expression
   <query-selectors>`.
   
   .. include:: /includes/fact-audit-filter-single-quotes.rst
   
   .. include:: /includes/fact-audit-filter-yaml-configuration.rst
   
   .. include:: /includes/note-audit-in-enterprise-only.rst


SNMP Options
~~~~~~~~~~~~

.. note::

   .. include:: /includes/fact-macos-snmp.rst

.. option:: --snmp-subagent

   Runs SNMP as a subagent. For more information, see
   :doc:`/tutorial/monitor-with-snmp`.


.. option:: --snmp-master

   Runs SNMP as a master. For more information, see
   :doc:`/tutorial/monitor-with-snmp`.


.. _cli-mongod-inmemory:

inMemory Options
~~~~~~~~~~~~~~~~

.. option:: --inMemorySizeGB <number>

   *Default*: 50% of physical RAM less 1 GB

   .. versionadded:: 3.2
   
   Maximum amount of memory to allocate for :doc:`in-memory storage
   engine </core/inmemory>` data, including indexes, oplog if the
   :binary:`~bin.mongod` is part of replica set, replica set or sharded
   cluster metadata, etc.
   
   .. include:: /includes/fact-inmemory-storage-engine-default-ram.rst
   
   .. include:: /includes/fact-enterprise-only-admonition.rst
   


.. _encryption-key-management-options:

Encryption Key Management Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. option:: --enableEncryption <boolean>

   *Default*: False

   
   .. versionadded:: 3.2
   
   Enables encryption for the WiredTiger storage engine. You must set
   to ``true`` to pass in encryption keys and configurations.
   
   .. include:: /includes/fact-enterprise-only-admonition.rst
   


.. option:: --encryptionCipherMode <string>

   *Default*: AES256-CBC

   
   .. versionadded:: 3.2
   
   The cipher mode to use for encryption at rest:
   
   .. list-table::
      :header-rows: 1
      :widths: 35 65
   
      * - Mode
        - Description
   
      * - ``AES256-CBC``
        - 256-bit Advanced Encryption Standard in Cipher Block Chaining
          Mode
   
      * - ``AES256-GCM``
   
        - 256-bit Advanced Encryption Standard in Galois/Counter Mode
   
   .. include:: /includes/fact-enterprise-only-admonition.rst
   


.. option:: --encryptionKeyFile <string>

   
   .. versionadded:: 3.2
   
   The path to the local keyfile when managing keys via process *other
   than* KMIP. Only set when managing keys via process other than KMIP.
   If data is already encrypted using KMIP, MongoDB will throw an error.
   
   Requires :setting:`enableEncryption` to be ``true``.
   
   .. include:: /includes/fact-enterprise-only-admonition.rst
   


.. option:: --kmipKeyIdentifier <string>

   
   .. versionadded:: 3.2
   
   Unique KMIP identifier for an existing key within the KMIP server.
   Include to use the key associated with the identifier as the system
   key. You can only use the setting the first time you enable
   encryption for the :binary:`~bin.mongod` instance. Requires
   :setting:`enableEncryption` to be true.
   
   If unspecified, MongoDB will request that the KMIP server create a
   new key to utilize as the system key.
   
   If the KMIP server cannot locate a key with the specified identifier
   or the data is already encrypted with a key, MongoDB will throw an
   error
   
   .. include:: /includes/fact-enterprise-only-admonition.rst
   


.. option:: --kmipRotateMasterKey <boolean>

   *Default*: False

   
   .. versionadded:: 3.2
   
   If true, rotate the master key and re-encrypt the internal
   keystore.
   
   .. include:: /includes/fact-enterprise-only-admonition.rst
   
   .. seealso:: :ref:`kmip-master-key-rotation`
   


.. option:: --kmipServerName <string>

   
   .. versionadded:: 3.2
   
   Hostname or IP address of key management solution running a KMIP
   server. Requires :setting:`enableEncryption` to be true.
   
   .. include:: /includes/fact-enterprise-only-admonition.rst
   


.. option:: --kmipPort <number>

   *Default*: 5696

   
   .. versionadded:: 3.2
   
   Port number the KMIP server is listening on. Requires that a
   :setting:`kmipServerName` be provided. Requires
   :setting:`enableEncryption` to be true.
   
   .. include:: /includes/fact-enterprise-only-admonition.rst
   


.. option:: --kmipClientCertificateFile <string>

   
   .. versionadded:: 3.2
   
   String containing the path to the client certificate used for
   authenticating MongoDB to the KMIP server. Requires that a
   :setting:`kmipServerName` be provided.
   
   .. include:: /includes/fact-enterprise-only-admonition.rst
   


.. option:: --kmipClientCertificatePassword <string>

   
   .. versionadded:: 3.2
   
   The password (if one exists) for the client certificate passed into
   :setting:`kmipClientCertificateFile`. Is used for
   authenticating MongoDB to the KMIP server. Requires that a
   :setting:`kmipClientCertificateFile` be provided.
   
   .. include:: /includes/fact-enterprise-only-admonition.rst
   


.. option:: --kmipServerCAFile <string>

   
   .. versionadded:: 3.2
   
   Path to CA File. Used for validating secure client connection to
   KMIP server.
   


