.. _mongos:

==========
``mongos``
==========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Synopsis
--------

:binary:`~bin.mongos` for "MongoDB Shard," is a routing service for
MongoDB shard configurations that processes queries from the
application layer, and determines the location of this data in the
:term:`sharded cluster`, in order to complete these operations.
From the perspective of the application, a
:binary:`~bin.mongos` instance behaves identically to any other MongoDB
instance.

Considerations
--------------

Never change the name of the :binary:`~bin.mongos` binary.

Options
-------

.. only:: (not man)

   .. class:: hidden

      .. binary:: mongos

Core Options
~~~~~~~~~~~~

.. program:: mongos

.. option:: --help, -h

   Returns information on the options and use of :program:`mongos`.


.. option:: --version

   Returns the :program:`mongos` release number.


.. option:: --config <filename>, -f <filename>

   Specifies a configuration file for runtime configuration options. The
   configuration file is the preferred method for runtime configuration of
   :program:`mongos`. The options are equivalent to the command-line
   configuration options. See :doc:`/reference/configuration-options` for
   more information.
   
   Ensure the configuration file uses ASCII encoding. The :program:`mongos`
   instance does not support configuration files with non-ASCII encoding,
   including UTF-8.


.. option:: --verbose, -v

   Increases the amount of internal reporting returned on standard output
   or in log files. Increase the verbosity with the ``-v`` form by
   including the option multiple times, (e.g. ``-vvvvv``.)
   


.. option:: --quiet

   Runs the :program:`mongos` in a quiet mode that attempts to limit the amount
   of output.

   This option suppresses:
   
   - output from :term:`database commands <database command>`
   
   - replication activity
   
   - connection accepted events
   
   - connection closed events


.. option:: --port <port>

   *Default*: 27017

   Specifies the TCP port on which the MongoDB instance listens for
   client connections.


.. option:: --bind_ip <ip address>

   *Default*: All interfaces.

   .. versionchanged:: 2.6.0
      The ``deb`` and ``rpm`` packages include a default configuration
      file (``/etc/mongod.conf``) that sets :option:`--bind_ip` to ``127.0.0.1``.
   
   The IP addresses and/or full Unix domain socket paths on which
   :program:`mongos` should listen for client connections. You may attach
   :program:`mongos` to any interface. To bind to multiple addresses, enter a
   list of comma-separated values.
   
   .. example:: ``localhost,/tmp/mongod.sock``
   
   You can specify both IPv4 and IPv6 addresses, or hostnames that
   resolve to an IPv4 or IPv6 address.
   
   .. example:: ``localhost, 2001:0DB8:e132:ba26:0d5c:2774:e7f9:d513``
   
   .. note::
   
      If specifying an IPv6 address *or* a hostname that resolves to an
      IPv6 address to :option:`--bind_ip`, you must start :program:`mongos` with 
      :option:`--ipv6` to enable IPv6 support. Specifying an IPv6 address
      to :option:`--bind_ip` does not enable IPv6 support.
   
   If specifying a 
   `link-local IPv6 address <https://en.wikipedia.org/w/index.php?title=Link-local_address&oldid=880793020#IPv6>`_ 
   (``fe80::/10``), you must append the 
   `zone index <https://en.wikipedia.org/w/index.php?title=IPv6_address&oldid=877601778#Scoped_literal_IPv6_addresses>`_
   to that address (i.e. ``fe80::<address>%<adapter-name>``). 
   
   .. example:: ``localhost,fe80::a00:27ff:fee0:1fcf%enp0s3``
   
   .. include:: /includes/tip-hostnames.rst
   
   .. include:: /includes/warning-bind-ip-security-considerations.rst

   To bind to all IPv4 addresses, enter ``0.0.0.0``.
   
   To bind to all IPv4 and IPv6 addresses, enter ``0.0.0.0,::``.
   


.. option:: --maxConns <number>

   The maximum number of simultaneous connections that :program:`mongos` will
   accept. This setting has no effect if it is higher than your operating
   system's configured maximum connection tracking threshold.
   
   Do not assign too low of a value to this option, or you will encounter errors
   during normal application operation.

   .. include:: /includes/fact-maxconns-mongos.rst
   
   .. include:: /includes/note-max-conns-max.rst
   


.. option:: --syslog

   Sends all logging output to the host's :term:`syslog` system rather
   than to standard output or to a log file. , as with :option:`--logpath`.
   
   The :option:`--syslog` option is not supported on Windows.


.. option:: --syslogFacility <string>

   *Default*: user

   Specifies the facility level used when logging messages to syslog.
   The value you specify must be supported by your
   operating system's implementation of syslog. To use this option, you
   must enable the :option:`--syslog` option..


.. option:: --logpath <path>

   Sends all diagnostic logging information to a log file instead of to
   standard output or to the host's :term:`syslog` system. MongoDB creates
   the log file at the path you specify.
   
   By default, MongoDB will move any existing log file rather than overwrite
   it. To instead append to the log file, set the :option:`--logappend` option.
   


.. option:: --logappend

   Appends new entries to the end of the existing log file when the :program:`mongos`
   instance restarts. Without this option, :binary:`~bin.mongod` will back up the
   existing log and create a new file.


.. option:: --timeStampFormat <string>

   *Default*: iso8601-local

   The time format for timestamps in log messages. Specify one of the
   following values:
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - ``ctime``
   
        - Displays timestamps as ``Wed Dec 31
          18:17:54.811``.
   
      * - ``iso8601-utc``
   
        - Displays timestamps in Coordinated Universal Time (UTC) in the
          ISO-8601 format. For example, for New York at the start of the
          Epoch: ``1970-01-01T00:00:00.000Z``
   
      * - ``iso8601-local``
   
        - Displays timestamps in local time in the ISO-8601
          format. For example, for New York at the start of the Epoch:
          ``1969-12-31T19:00:00.000-0500``
   


.. option:: --pidfilepath <path>

   Specifies a file location to hold the process ID of the :program:`mongos`
   process where :program:`mongos` will write its PID. This is useful for
   tracking the :program:`mongos` process in combination with the
   the :option:`--fork` option. Without a specified :option:`--pidfilepath` option, the
   process creates no PID file.


.. option:: --keyFile <file>

   Specifies the path to a key file that stores the shared secret
   that MongoDB instances use to authenticate to each other in a
   :term:`sharded cluster` or :term:`replica set`. :option:`--keyFile` implies
   ``--auth``. See :ref:`inter-process-auth` for more
   information.


.. option:: --setParameter <options>

   Specifies one of the MongoDB parameters described in
   :doc:`/reference/parameters`. You can specify multiple ``setParameter``
   fields.
   


.. option:: --httpinterface

   .. versionadded:: 2.6
   
   Enables the HTTP interface. Enabling the interface can increase
   network exposure.
   
   Leave the HTTP interface *disabled* for production deployments. If you
   *do* enable this interface, you should only allow trusted clients to
   access this port. See :ref:`security-firewalls`.
   
   .. note::
   
      - .. include:: /includes/fact-http-interface-kerberos.rst


.. option:: --nounixsocket

   Disables listening on the UNIX domain socket. :option:`--nounixsocket` applies only
   to Unix-based systems.

   The :program:`mongos` process
   always listens on the UNIX socket unless one of the following is true:
   
   - :option:`--nounixsocket` is set
   
   - :setting:`net.bindIp` is not set
   
   - :setting:`net.bindIp` does not specify ``127.0.0.1``
   
   .. |mongodb-package| replace:: :program:`mongos`
   
   .. include:: /includes/note-deb-and-rpm-default-to-localhost.rst


.. option:: --unixSocketPrefix <path>

   *Default*: /tmp

   The path for the UNIX socket. :option:`--unixSocketPrefix` applies only
   to Unix-based systems.
   
   If this option has no value, the
   :program:`mongos` process creates a socket with ``/tmp`` as a prefix. MongoDB
   creates and listens on a UNIX socket unless one of the following is true:
   
   - :setting:`net.unixDomainSocket.enabled` is ``false``
   
   - :option:`--nounixsocket` is set
   
   - :setting:`net.bindIp` is not set
   
   - :setting:`net.bindIp` does not specify ``127.0.0.1``


.. option:: --filePermissions <path>

   *Default*: ``0700``

   Sets the permission for the UNIX domain socket file.
   
   :option:`--filePermissions` applies only to Unix-based systems.


.. option:: --fork

   Enables a :term:`daemon` mode that runs the :program:`mongos` process in the
   background. By default :program:`mongos` does not run as a daemon:
   typically you will run :program:`mongos` as a daemon, either by using
   :option:`--fork` or by using a controlling process that handles the
   daemonization process (e.g. as with ``upstart`` and ``systemd``).


Sharded Cluster Options
~~~~~~~~~~~~~~~~~~~~~~~

.. option:: --configdb <config1>,<config2>,<config3>

   Specifies the :term:`configuration database <config database>` for the
   :term:`sharded cluster`. You must specify either 1 or 3
   configuration servers, in a comma separated list. **Always** use 3
   config servers in production environments.
   
   All :binary:`~bin.mongos` instances **must** specify the exact same value for
   :option:`--configdb`
   
   If your configuration databases reside in more that one data center,
   order the hosts so that first config sever in the list is the closest to the
   majority of your :binary:`~bin.mongos` instances.
   
   .. warning::
   
      Never remove a config server from this setting, even if the config
      server is not available or offline.


.. option:: --localThreshold

   *Default*: 15

   Specifies the ping time, in milliseconds, that :binary:`~bin.mongos` uses
   to determine which secondary replica set members to pass read
   operations from clients. The default value of ``15`` corresponds to
   the default value in all of the client 
   :ecosystem:`drivers </drivers>`.
   
   When :binary:`~bin.mongos` receives a request that permits reads to
   :term:`secondary` members, the :binary:`~bin.mongos` will:
   
   - Find the member of the set with the lowest ping time.
   
   - Construct a list of replica set members that is within a ping time of
     15 milliseconds of the nearest suitable member of the set.
   
     If you specify a value for the :option:`--localThreshold` option, :binary:`~bin.mongos` will
     construct the list of replica members that are within the latency
     allowed by this value.
   
   - Select a member to read from at random from this list.
   
   The ping time used for a member compared by the :option:`--localThreshold` setting is a
   moving average of recent ping times, calculated at most every 10
   seconds. As a result, some queries may reach members above the threshold
   until the :binary:`~bin.mongos` recalculates the average.
   
   See the :ref:`replica-set-read-preference-behavior-member-selection`
   section of the :doc:`read preference </core/read-preference>`
   documentation for more information.


.. option:: --upgrade

   Updates the meta data format used by the :term:`config database`.
   


.. option:: --chunkSize <value>

   *Default*: 64

   Determines the size in megabytes of each :term:`chunk` in the
   :term:`sharded cluster`. A size of 64 megabytes is ideal in most
   deployments: larger chunk size can lead to uneven data distribution;
   smaller chunk size can lead to inefficient movement of chunks between
   nodes.
   
   :option:`--chunkSize` affects chunk size *only* when you initialize the cluster
   for the first time. If you later modify the option, the new value has no
   effect. See the :doc:`/tutorial/modify-chunk-size-in-sharded-cluster`
   procedure if you need to change the chunk size on an existing sharded
   cluster.


.. option:: --noAutoSplit

   Disables :binary:`~bin.mongos` from automatically splitting chunks for
   :term:`sharded collections <sharding>`. If set on all
   :binary:`~bin.mongos` instances, this prevents MongoDB from creating new
   chunks as the data in a collection grows.
   
   Because any :binary:`~bin.mongos` in a cluster can create a split, to
   totally disable splitting in a cluster you must set :option:`--noAutoSplit` on all
   :binary:`~bin.mongos`.

   
   .. warning::
   
      With :option:`--noAutoSplit` specified, the data in your sharded
      cluster may become imbalanced over time. Use the option with caution.


TLS/SSL Options
~~~~~~~~~~~~~~~

.. see:: :doc:`/tutorial/configure-ssl` for full
   documentation of MongoDB's support.

.. option:: --sslOnNormalPorts

   .. deprecated:: 2.6 Use :option:`--sslMode requireSSL <--sslMode>` instead.
   
   Enables TLS/SSL for :program:`mongos`.
   
   With :option:`--sslOnNormalPorts`, a :program:`mongos` requires TLS/SSL encryption for all
   connections on the default MongoDB port, or the port specified by
   :option:`--port`. By default, :option:`--sslOnNormalPorts` is
   disabled.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslMode <mode>

   .. versionadded:: 2.6
   
   Enables TLS/SSL or mixed TLS/SSL used for all network connections. The
   argument to the :option:`--sslMode` option can be one of the following:
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - ``disabled``
   
        - The server does not use TLS/SSL.
   
      * - ``allowSSL``
   
        - Connections between servers do not use TLS/SSL. For incoming
          connections, the server accepts both TLS/SSL and non-TLS/non-SSL.
   
      * - ``preferSSL``
   
        - Connections between servers use TLS/SSL. For incoming
          connections, the server accepts both TLS/SSL and non-TLS/non-SSL.
   
      * - ``requireSSL``
   
        - The server uses and accepts only TLS/SSL encrypted connections.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslPEMKeyFile <filename>

   Specifies the :file:`.pem` file that contains both the TLS/SSL certificate
   and key. Specify the file name of the :file:`.pem` file using relative
   or absolute paths.
   
   You must specify :option:`--sslPEMKeyFile` when TLS/SSL is enabled.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslPEMKeyPassword <value>

   Specifies the password to de-crypt the certificate-key file (i.e.
   :option:`--sslPEMKeyFile`). Use the :option:`--sslPEMKeyPassword` option only if the
   certificate-key file is encrypted. In all cases, the :program:`mongos` will
   redact the password from all logging and reporting output.
   
   .. versionchanged:: 2.6
      If the private key in the PEM file is encrypted and you do not
      specify the :option:`--sslPEMKeyPassword` option, the :program:`mongos` will prompt for a
      passphrase. See :ref:`ssl-certificate-password`.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --clusterAuthMode <option>

   *Default*: keyFile

   .. versionadded:: 2.6
   
   The authentication mode used for cluster authentication. If you use
   :ref:`internal x.509 authentication <x509-internal-authentication>`,
   specify so here. This option can have one of the following values:
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - ``keyFile``
   
        - Use a keyfile for authentication.
          Accept only keyfiles.
   
      * - ``sendKeyFile``
   
        - For rolling upgrade purposes. Send a keyfile for
          authentication but can accept both keyfiles and x.509
          certificates.
   
      * - ``sendX509``
   
        - For rolling upgrade purposes. Send the x.509 certificate for
          authentication but can accept both keyfiles and x.509
          certificates.
   
      * - ``x509``
   
        - Recommended. Send the x.509 certificate for authentication and
          accept only x.509 certificates.
   
   .. include:: /includes/fact-ssl-supported.rst
   


.. option:: --sslClusterFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains the x.509 certificate-key
   file for :ref:`membership authentication <x509-internal-authentication>`
   for the cluster or replica set.
   
   If :option:`--sslClusterFile` does not specify the ``.pem`` file for internal cluster
   authentication, the cluster uses the ``.pem`` file specified in the
   :option:`--sslPEMKeyFile` option.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslClusterPassword <value>

   .. versionadded:: 2.6
   
   Specifies the password to de-crypt the x.509 certificate-key file
   specified with ``--sslClusterFile``. Use the :option:`--sslClusterPassword` option only
   if the certificate-key file is encrypted. In all cases, the :program:`mongos`
   will redact the password from all logging and reporting output.
   
   If the x.509 key file is encrypted and you do not specify the
   :option:`--sslClusterPassword` option, the :program:`mongos` will prompt for a passphrase. See
   :ref:`ssl-certificate-password`.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslCAFile <filename>

   .. versionadded:: 2.4
   
   Specifies the :file:`.pem` file that contains the root certificate chain
   from the Certificate Authority. Specify the file name of the
   :file:`.pem` file using relative or absolute paths.
   
   .. include:: /includes/fact-ssl-supported.rst
   
   .. include:: /includes/warning-x509-requires-sslCAfile.rst


.. option:: --sslCRLFile <filename>

   .. versionadded:: 2.4
   
   Specifies the the :file:`.pem` file that contains the Certificate Revocation
   List. Specify the file name of the :file:`.pem` file using relative or
   absolute paths.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslAllowConnectionsWithoutCertificates

   .. versionadded:: 2.4
   
   .. versionchanged:: 3.0.0
      ``--sslWeakCertificateValidation`` became :option:`--sslAllowConnectionsWithoutCertificates`. For
      compatibility, MongoDB processes continue to accept
      ``--sslWeakCertificateValidation``, but all users should
      update their configuration files.

   Disables the requirement for TLS/SSL certificate validation that
   ``--sslCAFile`` enables. With the :option:`--sslAllowConnectionsWithoutCertificates` option, the :program:`mongos`
   will accept connections when the client does not present a certificate
   when establishing the connection.
   
   If the client presents a certificate and the :program:`mongos` has :option:`--sslAllowConnectionsWithoutCertificates`
   enabled, the :program:`mongos` will validate the certificate using the root
   certificate chain specified by ``--sslCAFile`` and reject clients
   with invalid certificates.
   
   Use the :option:`--sslAllowConnectionsWithoutCertificates` option if you have a mixed deployment that includes
   clients that do not or cannot present certificates to the :program:`mongos`.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslAllowInvalidCertificates

   .. versionadded:: 2.6
   
   Bypasses the validation checks for TLS/SSL certificates on other servers
   in the cluster and allows the use of invalid certificates.
   
   When using
   the :option:`--sslAllowInvalidCertificates` setting, MongoDB
   logs a warning regarding the use of the invalid certificate.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslAllowInvalidHostnames

   .. versionadded:: 3.0
   
   Disables the validation of the hostnames in TLS/SSL certificates,
   when connecting to other members of the replica set or sharded cluster
   for inter-process authentication. This allows :program:`mongos` to connect
   to other members if the hostnames in their certificates do not match
   their configured hostname.
   
   .. include:: /includes/fact-ssl-supported.rst


.. option:: --sslDisabledProtocols <protocol(s)>

   .. versionadded:: 3.0.7
   
   Prevents a MongoDB server running with SSL from accepting incoming
   connections that use a specific protocol or protocols. :option:`--sslDisabledProtocols`
   recognizes the following protocols: ``TLS1_0``, ``TLS1_1``, and
   ``TLS1_2``. Specifying an unrecognized protocol will prevent the
   server from starting.
   
   To specify multiple protocols, use a comma separated list of
   protocols.
   
   Members of replica sets and sharded clusters must speak at least one
   protocol in common.
   
   .. seealso:: :ref:`ssl-disallow-protocols`


.. option:: --sslFIPSMode

   .. versionadded:: 2.4
   
   Directs the :program:`mongos` to use the FIPS mode of the installed OpenSSL
   library. Your system must have a FIPS
   compliant OpenSSL library to use the :option:`--sslFIPSMode` option.
   
   .. include:: /includes/note-fips-is-enterprise-only.rst


Audit Options
~~~~~~~~~~~~~

.. option:: --auditDestination

   .. versionadded:: 2.6
   
   Enables :doc:`auditing </core/auditing>` and specifies where
   :program:`mongos` sends all audit events.

   :option:`--auditDestination` can have one of the following values:
   
   .. list-table::
      :header-rows: 1
      :widths: 15 50
   
      * - Value
   
        - Description
   
      * - ``syslog``
   
        - Output the audit events to syslog in JSON format. Not available on
          Windows. Audit messages have a syslog severity level of ``info``
          and a facility level of ``user``.
   
          The syslog message limit can result in the truncation of
          audit messages. The auditing system will neither detect the
          truncation nor error upon its occurrence.
   
      * - ``console``
   
        - Output the audit events to ``stdout`` in JSON format.
   
      * - ``file``
   
        - Output the audit events to the file specified in
          :option:`--auditPath` in the format specified in
          :option:`--auditFormat`.
   
   .. include:: /includes/note-audit-in-enterprise-only.rst


.. option:: --auditFormat

   .. versionadded:: 2.6
   
   Specifies the format of the output file for :doc:`auditing
   </core/auditing>` if :option:`--auditDestination` is ``file``. The
   :option:`--auditFormat` option can have one of the following values:
   
   .. list-table::
      :header-rows: 1
      :widths: 15 50
   
      * - Value
   
        - Description
   
      * - ``JSON``
   
        - Output the audit events in JSON format to the file specified
          in :option:`--auditPath`.
   
      * - ``BSON``
   
        - Output the audit events in BSON binary format to the file
          specified in :option:`--auditPath`.
   
   Printing audit events to a file in JSON format degrades server
   performance more than printing to a file in BSON format.
   
   .. include:: /includes/note-audit-in-enterprise-only.rst


.. option:: --auditPath

   .. versionadded:: 2.6
   
   Specifies the output file for :doc:`auditing </core/auditing>` if
   :option:`--auditDestination` has value of ``file``. The :option:`--auditPath`
   option can take either a full path name or a relative path name.
   
   .. include:: /includes/note-audit-in-enterprise-only.rst


.. option:: --auditFilter

   .. versionadded:: 2.6
   
   Specifies the filter to limit the :ref:`types of operations
   <audit-action-details-results>` the :doc:`audit system
   </core/auditing>` records. The option takes a string representation
   of a query document of the form:
   
   .. code-block:: javascript
   
      { <field1>: <expression1>, ... }
   
   The ``<field>`` can be :doc:`any field in the audit message
   </reference/audit-message>`, including fields returned in the
   :ref:`param <audit-action-details-results>` document. The
   ``<expression>`` is a :ref:`query condition expression
   <query-selectors>`.
   
   .. include:: /includes/fact-audit-filter-single-quotes.rst
   
   .. include:: /includes/fact-audit-filter-yaml-configuration.rst
   
   .. include:: /includes/note-audit-in-enterprise-only.rst



Additional Options
~~~~~~~~~~~~~~~~~~

.. this section will move into the top following the resolution of
   SERVER-12889

.. option:: --ipv6

   
   Enables IPv6 support. :program:`mongos` disables IPv6 support by default.
   
   Setting :option:`--ipv6` does *not* direct the :program:`mongos` to listen on any
   local IPv6 addresses or interfaces. To configure the :program:`mongos` to
   listen on an IPv6 interface, you must configure :option:`--bind_ip` with one
   or more IPv6 addresses or hostnames that resolve to IPv6 addresses.


.. option:: --jsonp

   Permits :term:`JSONP` access via an HTTP interface. Enabling the
   interface can increase network exposure. The :option:`--jsonp` option enables the
   HTTP interface, even if the :setting:`HTTP interface <net.http.enabled>`
   option is disabled.


.. option:: --noscripting

   Disables the scripting engine.
   


